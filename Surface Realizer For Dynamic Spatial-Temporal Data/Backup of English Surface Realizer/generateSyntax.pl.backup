:- consult('dictionaryDataFinal.pl').
:- consult('frameNounPhrase.pl').
:- consult('frameVerbPhrase.pl').
:- consult('grammar.pl').
/* definition of generate_syntax_tree 
 Example1: generate_syntax_tree_sentence(nodeValues( [  fat,    man,            quickly,         walk, to,        [],end,        of,    long,   corridor     , past_continuous]),SyntaxTree).
 */


generateSyntaxTree(nodeValues([
			      Subject_adjective, 			/*properties of subject*/
			      Subject_noun,      			/*subject_name*/
			    
			      Adverb_of_main_verb, 			/*properties of interaction*/
			      Main_verb, 				/*name of interaction*/
			    
			      Preposition_between_verb_and_object_1, 	
			    
			      Adjective_of_object_1, 			/*properties of object*/
			      Noun_of_object_1,				/*name of object*/
			    
			      Preposition_between_object1_object2, 
			    
			      Adjective_of_object_2, 
			      Noun_of_object_2, 
		     Tense]),SyntaxTree) :- 
/* subject noun with subject adjective*/
					   grammar(nodeValues([
								Subject_adjective, 			/*properties of subject*/
								Subject_noun,      			/*subject_name*/
			    
								Adverb_of_main_verb, 			/*properties of interaction*/
								Main_verb, 				/*name of interaction*/
			    
								Preposition_between_verb_and_object_1, 	
			    
								Adjective_of_object_1, 			/*properties of object*/
								Noun_of_object_1,				/*name of object*/
			    
								Preposition_between_object1_object2, 
			    
								Adjective_of_object_2, 
								Noun_of_object_2, 
								Tense])
						  ,SyntaxTree),
							      beautifulPrint(SyntaxTree).



/*printing the syntax tree beautifully */

beautifulPrint([Head|Tail]) :- 					
								 nl, 
								write('							'),
								ansi_format([bold,underline,fg(green)], 'start', []),
					
								 nl,
								 write('     		'),
								 ansi_format([bold,underline,fg(green)], 'n~w', [p]), 
								 write('												'), 
								 ansi_format([bold,underline,fg(green)], 'v~w', [p]), 
								 nl, 
								 write('         									'), 
								 ansi_format([bold,underline,fg(green)], 'mv~w', [p]),
								 write('      							     '),
								 ansi_format([bold,underline,fg(green)], 'o~w', [p]), nl, 
								 nl,
								 printPhrase(Head),
								 write(' 					   '),
								 analyze(Tail). 
								  
								   
analyze([Head|_]) :- 
		      dealHead(Head).

dealHead([Head|Tail]):- 
		      printPhrase(Head),
		      write('   		  	'),
		      printPhrase(Tail).
		      
printPhrase(Structure):-					
			write(' 	 '),
			ansi_format([italic,bold,underline,fg(cyan)], '~w', [Structure]).
			
								
/*Simultaneous Sentences, Syntax Tree Generation.
 generate_syntax_tree_simultaneous([[  fat,    man,            quickly,         walk, to,        [],end,        of,    long,   corridor     , past_continuous],
				   [  grumpy,    woman,            quickly,         read, [],        [],floor,        of,    long,   corridor     , past_continuous],
				   [  sincere, 'Dave',          right,                turn, [],      [], [],       [],        [],    [],      present_continuous ]]).
 */

generateSimultaneousSyntaxTree([Action|OtherActions],SyntaxTree) :- 
			generateSyntaxTree(nodeValues(Action),SyntaxTree),
			check(OtherActions,OtherActions).
						   
   
   comma_positioning([Action|OtherActions]) :-
						( OtherActions = []
						     ->  generateSyntaxTree(nodeValues(Action),_)
								  ;   (generateSyntaxTree(nodeValues(Action),_),
									 comma_positioning(OtherActions))).

  check(Z,[Action|OtherActions]) :- 								  
				( OtherActions = []
				->  (generateSyntaxTree(nodeValues(Action),_))
					; comma_positioning(Z)).


















